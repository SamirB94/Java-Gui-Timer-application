/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package timeapplication;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.Duration;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.time.temporal.ChronoUnit;
import java.util.Date;
import static javafx.util.Duration.seconds;
import javax.swing.JColorChooser;
import javax.swing.JDialog;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;

/**
 *
 * @author Baltic
 */
public class MyFrame1 extends  javax.swing.JFrame {

    SwingWorker sw;  
    boolean start;  
    String appTimer;  
    Duration duration = null;
    long diff;
  
    
    public MyFrame1() {
        initComponents();
        
    }
        
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jrb1 = new javax.swing.JRadioButton();
        jrb2 = new javax.swing.JRadioButton();
        colorButton = new javax.swing.JButton();
        text1 = new javax.swing.JTextField();
        startButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        jsp2 = new javax.swing.JSpinner();
        colorLabel = new javax.swing.JLabel();
        speedSpinner = new javax.swing.JSpinner();
        jtf1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jrb1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jrb1.setText("Time");
        jrb1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jrb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrb1ItemStateChanged(evt);
            }
        });
        jrb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrb1ActionPerformed(evt);
            }
        });

        jrb2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jrb2.setText("Countdown (sec)");
        jrb2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jrb2ItemStateChanged(evt);
            }
        });

        colorButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        colorButton.setText("Choose color:");
        colorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorButtonActionPerformed(evt);
            }
        });

        text1.setEditable(false);
        text1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        text1.setText("Speed:");
        text1.setBorder((javax.swing.BorderFactory.createEmptyBorder()));

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        stopButton.setText("Stop");
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        jsp2.setModel(new javax.swing.SpinnerNumberModel());

        colorLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        colorLabel.setText("No color selected");
        colorLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        speedSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 5, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrb1)
                            .addComponent(jrb2))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jsp2, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                            .addComponent(jtf1))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(speedSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(6, 6, 6))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(colorButton)
                                .addGap(18, 18, 18)
                                .addComponent(colorLabel)))
                        .addGap(33, 33, 33))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrb1)
                    .addComponent(jtf1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jsp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jrb2))
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(colorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(colorButton))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton)
                    .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopButton)
                    .addComponent(speedSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
            
    private void jrb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrb1ItemStateChanged
      if(jrb1.isSelected()==true){  
        jrb2.setEnabled(false);
        jsp2.setEnabled(false);
      }else{
        jrb2.setEnabled(true);
        jsp2.setEnabled(true);  
      }
    }//GEN-LAST:event_jrb1ItemStateChanged

    private void jrb2ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jrb2ItemStateChanged
        
        if(jrb2.isSelected()==true){  
        jrb1.setEnabled(false);
        jtf1.setEnabled(false);
      }else{
        jrb1.setEnabled(true);
        jtf1.setEnabled(true);  
      }
    }//GEN-LAST:event_jrb2ItemStateChanged

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        sw.cancel(false);
        jtf1.setEnabled(true);
        jsp2.setEnabled(true);
        jrb1.setEnabled(true);
        jrb2.setEnabled(true);
        colorButton.setEnabled(true);
        speedSpinner.setEnabled(true);
        startButton.setEnabled(true);
        colorLabel.setBackground(null);
        colorLabel.setText("No color selected");
        jrb1.setSelected(false);
        jrb2.setSelected(false);
    }//GEN-LAST:event_stopButtonActionPerformed

    private void colorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorButtonActionPerformed
        JColorChooser jcc = new JColorChooser();
        JDialog dialog = JColorChooser.createDialog(jcc, "Choose color", true, jcc, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                Color c = jcc.getColor();
                colorLabel.setText("Color is selected");             
                colorLabel.setOpaque(true);
                colorLabel.setBackground(c);
                
                if((colorLabel.getForeground() == c)){
                    colorLabel.setForeground(Color.BLACK);
                }else{
                    colorLabel.setForeground(Color.WHITE);
                } 
                
            }
        }, null);
        dialog.setVisible(true);
    }//GEN-LAST:event_colorButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        
        jrb1.setEnabled(false);
        jrb2.setEnabled(false);
        jtf1.setEnabled(false);
        jsp2.setEnabled(false);
        speedSpinner.setEnabled(false);
        startButton.setEnabled(false);
        
        Details d = new Details();
        
        d.setColor(colorLabel.getBackground());
        d.setSpeed((int) speedSpinner.getValue());
        
        
        
        if(jrb1.isSelected()){
            start = true;            
                     
          try{
              
                LocalTime t = LocalTime.now();
              
                LocalTime t1 = LocalTime.parse(jtf1.getText(), DateTimeFormatter.ofPattern("HH:mm:ss"));
                
                diff = ChronoUnit.MILLIS.between(t, t1);
                
            
          }catch(Exception e){
              JOptionPane.showMessageDialog(null, e.getMessage());
          }
          sw = new SwingWorker(){
                @Override
                protected Object doInBackground() throws Exception {
                    Thread.sleep(diff);
                    BlinkFrame.startTimer();
                while(start){
                    BlinkFrame.bf.getContentPane().setBackground(d.getColor());
                    Thread.sleep(d.getSpeed()*1000);
                    BlinkFrame.bf.getContentPane().setBackground(Color.darkGray);
                    Thread.sleep(d.getSpeed()*1000);
                }
                return null;
                }

                @Override
                protected void done() {
                    JOptionPane.showMessageDialog(null, "BYE BYE !");
                    BlinkFrame.bf.dispose();
                    d.setColor(null);
                    start = false;
                }          
          };
                sw.execute();
        }
        else if (jrb2.isSelected()){
            d.setTime2((int) jsp2.getValue());
            start = true;
            sw = new SwingWorker(){
                @Override
                protected Object doInBackground() throws Exception {
                    Thread.sleep(d.getTime2()*1000);
                    BlinkFrame.startTimer();
                while(start){
                    BlinkFrame.bf.getContentPane().setBackground(d.getColor());
                    Thread.sleep(d.getSpeed()*1000);
                    BlinkFrame.bf.getContentPane().setBackground(Color.darkGray);
                    Thread.sleep(d.getSpeed()*1000);
                }
                return null;
            }

                @Override
                protected void done() {
                    JOptionPane.showMessageDialog(null, "BYE BYE !");
                    BlinkFrame.bf.dispose();
                    d.setColor(null);
                    start = false;
                }               
        };
                sw.execute();
        }else{
            JOptionPane.showMessageDialog(this, "No timer is selected!");
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void jrb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jrb1ActionPerformed
    
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyFrame1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyFrame1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton colorButton;
    private javax.swing.JLabel colorLabel;
    private javax.swing.JRadioButton jrb1;
    private javax.swing.JRadioButton jrb2;
    private javax.swing.JSpinner jsp2;
    private javax.swing.JTextField jtf1;
    private javax.swing.JSpinner speedSpinner;
    private javax.swing.JButton startButton;
    private javax.swing.JButton stopButton;
    private javax.swing.JTextField text1;
    // End of variables declaration//GEN-END:variables
}



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

